<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="2" total="30" passed="27">
  <reporter-output>
  </reporter-output>
  <suite name="CeiloMeterSuite" duration-ms="351864" started-at="2014-06-30T09:21:14Z" finished-at="2014-06-30T09:27:06Z">
    <groups>
    </groups>
    <test name="Regression1" duration-ms="351864" started-at="2014-06-30T09:21:14Z" finished-at="2014-06-30T09:27:06Z">
      <class name="org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQueryByTimestamp_LE_Test">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQueryByTimestamp_LE_Test@737797b1]" name="beforeClass" is-config="true" duration-ms="3648" started-at="2014-06-30T14:54:39Z" finished-at="2014-06-30T14:54:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="timeStampFilterLessThanOrEqualToQueryResponseAllJSONfieldsExist()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQueryByTimestamp_LE_Test@737797b1]" name="timeStampFilterLessThanOrEqualToQueryResponseAllJSONfieldsExist" duration-ms="20908" started-at="2014-06-30T14:54:43Z" finished-at="2014-06-30T14:55:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- timeStampFilterLessThanOrEqualToQueryResponseAllJSONfieldsExist -->
        <test-method status="PASS" signature="timeStampFilterLessThanOrEqualToQueryResponseAssertion()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQueryByTimestamp_LE_Test@737797b1]" name="timeStampFilterLessThanOrEqualToQueryResponseAssertion" duration-ms="18303" started-at="2014-06-30T14:55:04Z" finished-at="2014-06-30T14:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- timeStampFilterLessThanOrEqualToQueryResponseAssertion -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQueryByTimestamp_LE_Test@737797b1]" name="afterClass" is-config="true" duration-ms="0" started-at="2014-06-30T14:55:22Z" finished-at="2014-06-30T14:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQueryByTimestamp_LE_Test -->
      <class name="org.ceilometer.CeilometerTestAutomationSuite.FilterQueryProjectIDTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.FilterQueryProjectIDTest@3408b5b5]" name="beforeClass" is-config="true" duration-ms="3190" started-at="2014-06-30T14:51:52Z" finished-at="2014-06-30T14:51:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="projectIdFilterQueryTestResponseAssertionTest()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.FilterQueryProjectIDTest@3408b5b5]" name="projectIdFilterQueryTestResponseAssertionTest" duration-ms="9081" started-at="2014-06-30T14:51:55Z" finished-at="2014-06-30T14:52:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- projectIdFilterQueryTestResponseAssertionTest -->
        <test-method status="PASS" signature="projectIdFilterQueryResponseAllJSONfieldsExist()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.FilterQueryProjectIDTest@3408b5b5]" name="projectIdFilterQueryResponseAllJSONfieldsExist" duration-ms="8617" started-at="2014-06-30T14:52:04Z" depends-on-methods="org.ceilometer.CeilometerTestAutomationSuite.FilterQueryProjectIDTest.projectIdFilterQueryTestResponseAssertionTest" finished-at="2014-06-30T14:52:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- projectIdFilterQueryResponseAllJSONfieldsExist -->
        <test-method status="PASS" signature="projectIdFilterQueryVerifyProjectIdValue()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.FilterQueryProjectIDTest@3408b5b5]" name="projectIdFilterQueryVerifyProjectIdValue" duration-ms="8504" started-at="2014-06-30T14:52:13Z" depends-on-methods="org.ceilometer.CeilometerTestAutomationSuite.FilterQueryProjectIDTest.projectIdFilterQueryTestResponseAssertionTest" finished-at="2014-06-30T14:52:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- projectIdFilterQueryVerifyProjectIdValue -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.FilterQueryProjectIDTest@3408b5b5]" name="afterClass" is-config="true" duration-ms="0" started-at="2014-06-30T14:52:21Z" finished-at="2014-06-30T14:52:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- org.ceilometer.CeilometerTestAutomationSuite.FilterQueryProjectIDTest -->
      <class name="org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQueryByTimestamp_EQ_Test">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQueryByTimestamp_EQ_Test@1bd5b1dc]" name="beforeClass" is-config="true" duration-ms="3258" started-at="2014-06-30T14:52:52Z" finished-at="2014-06-30T14:52:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="FAIL" signature="timeStampFilterEqualsToQueryResponseAssertion()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQueryByTimestamp_EQ_Test@1bd5b1dc]" name="timeStampFilterEqualsToQueryResponseAssertion" duration-ms="6985" started-at="2014-06-30T14:52:55Z" finished-at="2014-06-30T14:53:02Z">
          <exception class="junit.framework.AssertionFailedError">
            <message>
              <![CDATA[expected:<400> but was:<200>]]>
            </message>
            <full-stacktrace>
              <![CDATA[junit.framework.AssertionFailedError: expected:<400> but was:<200>
	at junit.framework.Assert.fail(Assert.java:50)
	at junit.framework.Assert.failNotEquals(Assert.java:287)
	at junit.framework.Assert.assertEquals(Assert.java:67)
	at junit.framework.Assert.assertEquals(Assert.java:199)
	at junit.framework.Assert.assertEquals(Assert.java:205)
	at org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQueryByTimestamp_EQ_Test.timeStampFilterEqualsToQueryResponseAssertion(MeterListFilterQueryByTimestamp_EQ_Test.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:72)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.booter.ProviderFactory$ClassLoaderProxy.invoke(ProviderFactory.java:103)
	at com.sun.proxy.$Proxy0.invoke(Unknown Source)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:150)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcess(SurefireStarter.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:69)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- timeStampFilterEqualsToQueryResponseAssertion -->
        <test-method status="SKIP" signature="timeStampFilterEqualsToQueryResponseAllJSONfieldsExist()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQueryByTimestamp_EQ_Test@1bd5b1dc]" name="timeStampFilterEqualsToQueryResponseAllJSONfieldsExist" duration-ms="0" started-at="2014-06-30T14:53:02Z" depends-on-methods="org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQueryByTimestamp_EQ_Test.timeStampFilterEqualsToQueryResponseAssertion" finished-at="2014-06-30T14:53:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- timeStampFilterEqualsToQueryResponseAllJSONfieldsExist -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQueryByTimestamp_EQ_Test@1bd5b1dc]" name="afterClass" is-config="true" duration-ms="0" started-at="2014-06-30T14:53:02Z" finished-at="2014-06-30T14:53:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQueryByTimestamp_EQ_Test -->
      <class name="org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterWithFieldsTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterWithFieldsTest@6a8ff0ca]" name="beforeClass" is-config="true" duration-ms="3098" started-at="2014-06-30T14:55:59Z" finished-at="2014-06-30T14:56:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="meterListResponseJSONObjectsExist()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterWithFieldsTest@6a8ff0ca]" name="meterListResponseJSONObjectsExist" duration-ms="1566" started-at="2014-06-30T14:56:02Z" finished-at="2014-06-30T14:56:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- meterListResponseJSONObjectsExist -->
        <test-method status="PASS" signature="validateMeterListResponseJSONFields()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterWithFieldsTest@6a8ff0ca]" name="validateMeterListResponseJSONFields" duration-ms="905" started-at="2014-06-30T14:56:04Z" finished-at="2014-06-30T14:56:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateMeterListResponseJSONFields -->
        <test-method status="PASS" signature="verifyMeterListFilterWithMeterIdAllJSONFieldsExist()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterWithFieldsTest@6a8ff0ca]" name="verifyMeterListFilterWithMeterIdAllJSONFieldsExist" duration-ms="8284" started-at="2014-06-30T14:56:05Z" finished-at="2014-06-30T14:56:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMeterListFilterWithMeterIdAllJSONFieldsExist -->
        <test-method status="PASS" signature="verifyMeterListFilterWithMeterIdResponseCode()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterWithFieldsTest@6a8ff0ca]" name="verifyMeterListFilterWithMeterIdResponseCode" duration-ms="13094" started-at="2014-06-30T14:56:13Z" finished-at="2014-06-30T14:56:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMeterListFilterWithMeterIdResponseCode -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterWithFieldsTest@6a8ff0ca]" name="afterClass" is-config="true" duration-ms="0" started-at="2014-06-30T14:56:26Z" finished-at="2014-06-30T14:56:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterWithFieldsTest -->
      <class name="org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQueryByTimestamp_GE_Test">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQueryByTimestamp_GE_Test@27d198c3]" name="beforeClass" is-config="true" duration-ms="2346" started-at="2014-06-30T14:53:02Z" finished-at="2014-06-30T14:53:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="timeStampFilterGreaterThanOrEqualToQueryResponseAllJSONfieldsExist()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQueryByTimestamp_GE_Test@27d198c3]" name="timeStampFilterGreaterThanOrEqualToQueryResponseAllJSONfieldsExist" duration-ms="23522" started-at="2014-06-30T14:53:05Z" finished-at="2014-06-30T14:53:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- timeStampFilterGreaterThanOrEqualToQueryResponseAllJSONfieldsExist -->
        <test-method status="PASS" signature="timeStampFilterGreaterThanOrEqualToQueryResponseAssertion()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQueryByTimestamp_GE_Test@27d198c3]" name="timeStampFilterGreaterThanOrEqualToQueryResponseAssertion" duration-ms="15361" started-at="2014-06-30T14:53:28Z" finished-at="2014-06-30T14:53:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- timeStampFilterGreaterThanOrEqualToQueryResponseAssertion -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQueryByTimestamp_GE_Test@27d198c3]" name="afterClass" is-config="true" duration-ms="0" started-at="2014-06-30T14:53:44Z" finished-at="2014-06-30T14:53:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQueryByTimestamp_GE_Test -->
      <class name="org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQueryByTimestamp_GT_Test">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQueryByTimestamp_GT_Test@4c8d74b]" name="beforeClass" is-config="true" duration-ms="2831" started-at="2014-06-30T14:53:44Z" finished-at="2014-06-30T14:53:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="timeStampFilterGreaterThanQueryResponseAllJSONfieldsExist()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQueryByTimestamp_GT_Test@4c8d74b]" name="timeStampFilterGreaterThanQueryResponseAllJSONfieldsExist" duration-ms="36107" started-at="2014-06-30T14:53:46Z" finished-at="2014-06-30T14:54:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- timeStampFilterGreaterThanQueryResponseAllJSONfieldsExist -->
        <test-method status="PASS" signature="timeStampFilterGreaterThanQueryResponseAssertion()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQueryByTimestamp_GT_Test@4c8d74b]" name="timeStampFilterGreaterThanQueryResponseAssertion" duration-ms="16862" started-at="2014-06-30T14:54:22Z" finished-at="2014-06-30T14:54:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- timeStampFilterGreaterThanQueryResponseAssertion -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQueryByTimestamp_GT_Test@4c8d74b]" name="afterClass" is-config="true" duration-ms="0" started-at="2014-06-30T14:54:39Z" finished-at="2014-06-30T14:54:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQueryByTimestamp_GT_Test -->
      <class name="org.ceilometer.CeilometerTestAutomationSuite.MeterListValidatorTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListValidatorTest@31843ea1]" name="beforeClass" is-config="true" duration-ms="923" started-at="2014-06-30T14:56:33Z" finished-at="2014-06-30T14:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="meterListResponseJSONObjectsExist()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListValidatorTest@31843ea1]" name="meterListResponseJSONObjectsExist" duration-ms="2187" started-at="2014-06-30T14:56:34Z" finished-at="2014-06-30T14:56:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- meterListResponseJSONObjectsExist -->
        <test-method status="PASS" signature="validateMeterListResponseJSONFields()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListValidatorTest@31843ea1]" name="validateMeterListResponseJSONFields" duration-ms="1008" started-at="2014-06-30T14:56:36Z" finished-at="2014-06-30T14:56:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateMeterListResponseJSONFields -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListValidatorTest@31843ea1]" name="afterClass" is-config="true" duration-ms="0" started-at="2014-06-30T14:56:37Z" finished-at="2014-06-30T14:56:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- org.ceilometer.CeilometerTestAutomationSuite.MeterListValidatorTest -->
      <class name="org.ceilometer.CeilometerTestAutomationSuite.MeterListWithMeterNameTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListWithMeterNameTest@4435db24]" name="beforeClass" is-config="true" duration-ms="1142" started-at="2014-06-30T14:56:37Z" finished-at="2014-06-30T14:56:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="meterListWithMeterNameResponseAssertionTest()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListWithMeterNameTest@4435db24]" name="meterListWithMeterNameResponseAssertionTest" duration-ms="9477" started-at="2014-06-30T14:56:38Z" finished-at="2014-06-30T14:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- meterListWithMeterNameResponseAssertionTest -->
        <test-method status="PASS" signature="meterListWithMeterNameAllJSONFieldsExistTest()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListWithMeterNameTest@4435db24]" name="meterListWithMeterNameAllJSONFieldsExistTest" duration-ms="9317" started-at="2014-06-30T14:56:48Z" depends-on-methods="org.ceilometer.CeilometerTestAutomationSuite.MeterListWithMeterNameTest.meterListWithMeterNameResponseAssertionTest" finished-at="2014-06-30T14:56:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- meterListWithMeterNameAllJSONFieldsExistTest -->
        <test-method status="FAIL" signature="meterListWithMeterNameVerifyMeterNameTest()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListWithMeterNameTest@4435db24]" name="meterListWithMeterNameVerifyMeterNameTest" duration-ms="8922" started-at="2014-06-30T14:56:57Z" depends-on-methods="org.ceilometer.CeilometerTestAutomationSuite.MeterListWithMeterNameTest.meterListWithMeterNameResponseAssertionTest" finished-at="2014-06-30T14:57:06Z">
          <exception class="junit.framework.AssertionFailedError">
            <full-stacktrace>
              <![CDATA[junit.framework.AssertionFailedError
	at junit.framework.Assert.fail(Assert.java:48)
	at junit.framework.Assert.assertTrue(Assert.java:20)
	at junit.framework.Assert.assertTrue(Assert.java:27)
	at org.ceilometer.CeilometerTestAutomationSuite.MeterListWithMeterNameTest.meterListWithMeterNameVerifyMeterNameTest(MeterListWithMeterNameTest.java:99)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:72)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.booter.ProviderFactory$ClassLoaderProxy.invoke(ProviderFactory.java:103)
	at com.sun.proxy.$Proxy0.invoke(Unknown Source)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:150)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcess(SurefireStarter.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:69)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- meterListWithMeterNameVerifyMeterNameTest -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListWithMeterNameTest@4435db24]" name="afterClass" is-config="true" duration-ms="1" started-at="2014-06-30T14:57:06Z" finished-at="2014-06-30T14:57:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- org.ceilometer.CeilometerTestAutomationSuite.MeterListWithMeterNameTest -->
      <class name="org.ceilometer.CeilometerTestAutomationSuite.MeterListTest">
        <test-method status="PASS" signature="init()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListTest@1dae7f61]" name="init" is-config="true" duration-ms="1" started-at="2014-06-30T14:56:26Z" finished-at="2014-06-30T14:56:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListTest@1dae7f61]" name="setUp" is-config="true" duration-ms="3391" started-at="2014-06-30T14:56:26Z" finished-at="2014-06-30T14:56:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="invalidTokenGetMetersResponseCode()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListTest@1dae7f61]" name="invalidTokenGetMetersResponseCode" duration-ms="1328" started-at="2014-06-30T14:56:30Z" finished-at="2014-06-30T14:56:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTokenGetMetersResponseCode -->
        <test-method status="PASS" signature="verifyGetMetersResponseCode()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListTest@1dae7f61]" name="verifyGetMetersResponseCode" duration-ms="2311" started-at="2014-06-30T14:56:31Z" finished-at="2014-06-30T14:56:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyGetMetersResponseCode -->
      </class> <!-- org.ceilometer.CeilometerTestAutomationSuite.MeterListTest -->
      <class name="org.ceilometer.CeilometerTestAutomationSuite.FilterQueryByUserIDTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.FilterQueryByUserIDTest@391a1bb4]" name="beforeClass" is-config="true" duration-ms="6940" started-at="2014-06-30T14:51:14Z" finished-at="2014-06-30T14:51:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="userIdFilterQueryResponseAssertionTest()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.FilterQueryByUserIDTest@391a1bb4]" name="userIdFilterQueryResponseAssertionTest" duration-ms="13710" started-at="2014-06-30T14:51:21Z" finished-at="2014-06-30T14:51:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userIdFilterQueryResponseAssertionTest -->
        <test-method status="PASS" signature="userIdFilterQueryResponseAllJSONfieldsExist()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.FilterQueryByUserIDTest@391a1bb4]" name="userIdFilterQueryResponseAllJSONfieldsExist" duration-ms="9369" started-at="2014-06-30T14:51:35Z" depends-on-methods="org.ceilometer.CeilometerTestAutomationSuite.FilterQueryByUserIDTest.userIdFilterQueryResponseAssertionTest" finished-at="2014-06-30T14:51:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userIdFilterQueryResponseAllJSONfieldsExist -->
        <test-method status="PASS" signature="userIdFilterQueryVerifyuserIdValue()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.FilterQueryByUserIDTest@391a1bb4]" name="userIdFilterQueryVerifyuserIdValue" duration-ms="7453" started-at="2014-06-30T14:51:44Z" depends-on-methods="org.ceilometer.CeilometerTestAutomationSuite.FilterQueryByUserIDTest.userIdFilterQueryResponseAssertionTest" finished-at="2014-06-30T14:51:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userIdFilterQueryVerifyuserIdValue -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.FilterQueryByUserIDTest@391a1bb4]" name="afterClass" is-config="true" duration-ms="0" started-at="2014-06-30T14:51:52Z" finished-at="2014-06-30T14:51:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- org.ceilometer.CeilometerTestAutomationSuite.FilterQueryByUserIDTest -->
      <class name="org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQuerybyServiceIDTest1">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQuerybyServiceIDTest1@6110e3b5]" name="beforeClass" is-config="true" duration-ms="2563" started-at="2014-06-30T14:52:21Z" finished-at="2014-06-30T14:52:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="serviceIdFilterQueryResponseAllJSONfieldsExist()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQuerybyServiceIDTest1@6110e3b5]" name="serviceIdFilterQueryResponseAllJSONfieldsExist" duration-ms="10679" started-at="2014-06-30T14:52:24Z" finished-at="2014-06-30T14:52:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- serviceIdFilterQueryResponseAllJSONfieldsExist -->
        <test-method status="PASS" signature="serviceIdFilterQueryResponseAssertionTest()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQuerybyServiceIDTest1@6110e3b5]" name="serviceIdFilterQueryResponseAssertionTest" duration-ms="8696" started-at="2014-06-30T14:52:35Z" finished-at="2014-06-30T14:52:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- serviceIdFilterQueryResponseAssertionTest -->
        <test-method status="PASS" signature="serviceIdFilterQueryResponseVerifyserviceIdValue()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQuerybyServiceIDTest1@6110e3b5]" name="serviceIdFilterQueryResponseVerifyserviceIdValue" duration-ms="8841" started-at="2014-06-30T14:52:43Z" finished-at="2014-06-30T14:52:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- serviceIdFilterQueryResponseVerifyserviceIdValue -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQuerybyServiceIDTest1@6110e3b5]" name="afterClass" is-config="true" duration-ms="0" started-at="2014-06-30T14:52:52Z" finished-at="2014-06-30T14:52:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQuerybyServiceIDTest1 -->
      <class name="org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQueryByTimestamp_LT_Test">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQueryByTimestamp_LT_Test@308820b0]" name="beforeClass" is-config="true" duration-ms="2762" started-at="2014-06-30T14:55:22Z" finished-at="2014-06-30T14:55:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="timeStampFilterLessThanQueryResponseAllJSONfieldsExist()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQueryByTimestamp_LT_Test@308820b0]" name="timeStampFilterLessThanQueryResponseAllJSONfieldsExist" duration-ms="18773" started-at="2014-06-30T14:55:25Z" finished-at="2014-06-30T14:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- timeStampFilterLessThanQueryResponseAllJSONfieldsExist -->
        <test-method status="PASS" signature="timeStampFilterLessThanQueryResponseAssertion()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQueryByTimestamp_LT_Test@308820b0]" name="timeStampFilterLessThanQueryResponseAssertion" duration-ms="15529" started-at="2014-06-30T14:55:44Z" finished-at="2014-06-30T14:55:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- timeStampFilterLessThanQueryResponseAssertion -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQueryByTimestamp_LT_Test@308820b0]" name="afterClass" is-config="true" duration-ms="0" started-at="2014-06-30T14:55:59Z" finished-at="2014-06-30T14:55:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- org.ceilometer.CeilometerTestAutomationSuite.MeterListFilterQueryByTimestamp_LT_Test -->
    </test> <!-- Regression1 -->
  </suite> <!-- CeiloMeterSuite -->
</testng-results>
